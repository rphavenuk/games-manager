{
  "name": "rphaven/games",
  "description": "Games Manager for RP Haven",
  "license": "MIT",
  "type": "library",
  "authors": [
    {
      "name": "Barney Hanlon",
      "email": "barney@rphaven.co.uk"
    }
  ],
  "require": {
    "php": ">=8.3",
    "brick/math": "^0.11.0",
    "doctrine/dbal": "^3.8",
    "doctrine/doctrine-migrations-bundle": "^3.2",
    "ergebnis/http-method": "^2.4",
    "guzzlehttp/psr7": "^2.6",
    "nyholm/psr7": "^1.8",
    "php-ds/php-ds": "^1.4",
    "psr/http-message": "^2.0",
    "ramsey/uuid-doctrine": "^2.0",
    "shrikeh/datetime": "^0.1.1",
    "symfony/console": "^6.3",
    "symfony/dotenv": "^7.0",
    "symfony/filesystem": "^6.0",
    "symfony/finder": "^6.0",
    "symfony/flex": "^2.4",
    "symfony/http-foundation": "^6.3",
    "symfony/messenger": "^6.3",
    "symfony/runtime": "^6.3",
    "symfony/uid": "^7.0",
    "symfony/yaml": "^6.3",
    "symfony/psr-http-message-bridge": "^7.0",
    "shrikeh/teapot": "^1.0",
    "ergebnis/json": "^1.2",
    "ergebnis/json-printer": "^3.5",
    "ergebnis/json-normalizer": "^4.5",
    "amphp/amp": "^3.0",
    "revolt/event-loop": "^1.0",
    "monolog/monolog": "^3.5"
  },
  "require-dev": {
    "symfony/phpunit-bridge": "*",
      "behat/behat": "*",
      "ergebnis/composer-normalize": "*",
      "jangregor/phpstan-prophecy": "*",
      "phpmd/phpmd": "*",
      "phpmetrics/phpmetrics": "*",
      "phpspec/prophecy-phpunit": "^1.0",
      "phpstan/extension-installer": "*",
      "phpstan/phpstan": "*",
      "phpunit/php-code-coverage": "*",
      "phpunit/phpcov": "*",
      "phpunit/phpunit": ">=10.0",
      "squizlabs/php_codesniffer": "*",
      "vimeo/psalm": "*",
      "dealerdirect/phpcodesniffer-composer-installer": "*"
  },
  "autoload": {
    "psr-4": {
      "Api\\": "src/Api",
      "App\\": "src/App",
      "Infra\\": "src/Infra",
      "RpHaven\\Games\\": "src/Games"
    }
  },
  "autoload-dev": {
    "psr-4": {
      "Tests\\Unit\\": "tests/unit/src",
      "Tests\\Functional\\": "tests/functional/src"
    }
  },
  "config": {
    "allow-plugins": {
      "dealerdirect/phpcodesniffer-composer-installer": true,
      "ergebnis/composer-normalize": true,
      "infection/extension-installer": true,
      "phpstan/extension-installer": true,
      "symfony/flex": true,
      "symfony/runtime": true
    }
  },
  "extra": {
    "composer-normalize": {
      "indent-size": 2,
      "indent-style": "space"
    }
  },
  "scripts": {
    "auto-scripts": {
      "cache:clear": "symfony-cmd",
      "assets:install %PUBLIC_DIR%": "symfony-cmd"
    },
      "post-install-cmd": [
        "@install-codestandards"
      ],
      "behat": "vendor/bin/behat --format progress --format pretty",
      "craft": [
        "@test",
        "@quality"
      ],
      "fix": [
        "@phpcbf",
        "@psalm:fix",
        "@composer normalize"
      ],
      "infection": [
        "@putenv INFECTION_ALLOW_XDEBUG=1",
        "php -d 'xdebug.mode=coverage' vendor/bin/infection -vvv --coverage=build/coverage --show-mutations --threads=8  --min-covered-msi=${MIN_COVERED_MSI:-100} --min-msi=${MIN_MSI:-100}"
      ],
      "install-codestandards": [
        "PHPCSStandards\\Composer\\Plugin\\Installers\\PHPCodeSniffer\\Plugin::run"
      ],
      "metrics": [
        "@phpunit:all",
        "@phpmetrics"
      ],
      "phpcbf": "vendor/bin/phpcbf",
      "phpcs": "vendor/bin/phpcs",
      "phpmd": "vendor/bin/phpmd ./src text ./phpmd.xml.dist",
      "phpmetrics": "php -d 'error_reporting=E_ALL ^ E_DEPRECATED' vendor/bin/phpmetrics --config=phpmetrics.yml",
      "phpstan": "vendor/bin/phpstan analyse -c phpstan.neon.dist",
      "phpunit": [
        "@phpunit:all",
        "@infection"
      ],
      "phpunit:all": "vendor/bin/phpunit --coverage-xml=build/coverage/coverage-xml --log-junit ${COVERAGE_DIR:-build/coverage}/junit.xml --coverage-text  --coverage-html ${DOCS_DIR:-docs}/coverage  --coverage-cobertura ${COVERAGE_DIR:-build/coverage}/cobertura.xml --coverage-clover ${COVERAGE_DIR:-build/coverage}/clover.xml --path-coverage",
      "psalm": "vendor/bin/psalm",
      "psalm:fix": "vendor/bin/psalm --alter --issues=all --dry-run",
      "quality": [
        "@phpcs",
        "@phpstan",
        "@psalm"
      ],
      "test": [
        "@phpunit"
      ]
    }
}
